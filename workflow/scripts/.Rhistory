save(list = ls(all.names = TRUE), file = paste0(inputFolder,"DADA2Errors-",rDirection,".RData"), envir = .GlobalEnv)
fastQfiles = theFiles = sort(list.files(inputFolder, pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE))
fastQfiles
dadaDenoised = dada(fastQfiles, err=DADA2errors, multithread=cores, pool=TRUE)
cores = 5
dadaDenoised = dada(fastQfiles, err=DADA2errors, multithread=cores, pool=TRUE)
save(list = ls(all.names = TRUE), file = paste0(inputFolder,"DADA2Denoise-",rDirection,".RData"), envir = .GlobalEnv)
opt = NULL
opt$input = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R1.RData"
opt$second = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R2.RData"
R1denoised = opt$input
R2denoised = opt$second
load(R1denoised)
fastQfiles
?mergePairs
load("/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Errors-R1.RData")
theFiles
fastQfiles = sort(list.files(inputFolder, pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE))
fastQfiles
load(/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Errors-R1.RData)
opt = NULL
opt$input = "inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Errors-R1.RData"
)
opt$input = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Errors-R1.RData"
inputFolder = opt$input
opt$rdirection = "R1"
rDirection = opt$rdirection
theFiles = sort(list.files(inputFolder, pattern=rDirection, full.names = TRUE))
theFiles
inputFolder
inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/"
theFiles = sort(list.files(inputFolder, pattern=rDirection, full.names = TRUE))
theFiles
theFiles = sort(list.files(inputFolder, pattern=pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE))
theFiles = sort(list.files(inputFolder, pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE))
theFiles
DADA2errors = learnErrors(theFiles, randomize=TRUE)
inputFolder
rm(cores,opt,inputFolder)
save(list = ls(all.names = TRUE), file = paste0(inputFolder,"DADA2Errors-",rDirection,".RData"), envir = .GlobalEnv)
inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/"
save(list = ls(all.names = TRUE), file = paste0(inputFolder,"DADA2Errors-",rDirection,".RData"), envir = .GlobalEnv)
opt = NULL
opt$input = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Errors-R1.RData"
inputRObject = opt$input %>% load(.)
suppressMessages(library("optparse"))
suppressMessages(library("magrittr"))
suppressMessages(library("dada2"))
inputRObject = opt$input %>% load(.)
inputRObject
opt$input %>% attach(.)
load(opt$input)
opt$input %>% load(.)
opt$input
load(opt$input)
theFiles
cores=5
dadaDenoised = dada(theFiles, err=DADA2errors, multithread=cores, pool=TRUE)
rm(opt,rDirection,cores)
save(list = ls(all.names = TRUE), file = paste0(inputFolder,"DADA2Denoise-",rDirection,".RData"), envir = .GlobalEnv)
opt = NULL
opt$input = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R1.RData"
R1denoised = opt$input
load(R1denoised)
dadaFs = dadaDenoised
filtFs = theFiles
rm(theFiles, R1denoised, dadaDenoised, theFiles)
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors)
load("/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R2.RData")
dadaRs = dadaDenoised
filtRs = theFiles
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors)
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors, opt)
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors, opt, rDirection)
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors, opt, rDirection, fastQfiles)
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors)
mergers = mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
seqtab = makeSequenceTable(mergers)
seqtab = as.data.frame(cbind(rownames(seqtab),seqtab))
write_tsv(seqtab,file=paste0(inputFolder,"/seqtab.tsv"))
suppressMessages(library("readr"))
suppressMessages(library("tidyr"))
suppressMessages(library("magrittr"))
?write_tsv
write_tsv(seqtab,file=paste0(inputFolder,"/seqtab.tsv"))
opt = NULL
opt$input = "/Users/khaled/Desktop/v13_V45/favabean"
theFolder = opt$input
inputFolder = opt$input
seqtabs = sort(list.files(inputFolder, pattern="seqtab.tsv", full.names = TRUE))
seqtabs
inputFolder
?list.files
seqtabs = list.files(inputFolder, pattern="seqtab.tsv", full.names = TRUE, recursive = TRUE)
seqtabs
seqtabs = list.files(inputFolder, pattern="seqtab.tsv", full.names = TRUE, recursive = TRUE)
seqtabs
x=seqtabs[1]
x
x =  read_tsv(x)
View(x)
x=seqtabs[1]
currentTable =  read_tsv(x) %>% as.data.frame(.)
View(currentTable)
?pivot_longer()
currentTable2 = pivot_longer(currentTable,names_to = "sequence",values_to = "counts")
dim(currentTable)
2:dim(currentTable)[2]
currentTable2 = pivot_longer(currentTable,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts")
View(currentTable2)
currentTable =  read_tsv(x) %>% as.data.frame(.) %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts") %>% as.data.frame(.)
View(currentTable)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
counts=as.numeric())
View(combinedTables)
combinedTables = cbind(combinedTables,currentTable)
combinedTables = rbind(combinedTables,currentTable)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
counts=as.numeric())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.) %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
counts=as.numeric())
x=seqtabs[1]
x
currentTable =  read_tsv(x) %>% as.data.frame(.) %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts") %>% as.data.frame(.)
combinedTables = rbind(combinedTable,currentTable)
combinedTables = rbind(combinedTables,currentTable)
currentTable =  read_tsv(x) %>% as.data.frame(.) %>% pivot_longer(cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts") %>% as.data.frame(.)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
counts=as.numeric())
currentTable =  read_tsv(x) %>% as.data.frame(.) %>% pivot_longer(cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts") %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts") %>% as.data.frame(.)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
counts=as.character())
combinedTables = rbind(combinedTables,currentTable)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
counts=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "counts") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
?collapseNoMismatch
?pivot_wider()
View(combinedTables)
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "counts")
View(seqtab_combined)
collapseNoMismatch(seqtab_combined,minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
collapseNoMismatch(as.data.frame(seqtab_combined),minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
View(seqtab_combined)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
collapseNoMismatch(as.data.frame(combinedTables),minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
collapseNoMismatch
?collapseNoMismatch
collapseNoMismatch(as.data.frame(combinedTables),minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
hi = collapseNoMismatch(as.data.frame(combinedTables),minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
load("~/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R1.RData")
dadaFs = dadaDenoised
filtFs = theFiles
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors)
load("~/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R2.RData")
dadaRs = dadaDenoised
filtRs = theFiles
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors)
mergers = mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
seqtab = makeSequenceTable(mergers)
View(seqtab)
View(seqtab_combined)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "counts")
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
View(seqtab_combined)
seqtab_combined = as.matrix(seqtab_combined)
seqtab_combined[,1]
rownames(seqtab_combined) = seqtab_combined[,1]
seqtab_combined[,1] = NULL
seqtab_combined = seqtab_combined[,-1]
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
seqtab_combined = as.matrix(seqtab_combined)
rownames(seqtab_combined) = seqtab_combined[,1]
seqtab_combined = seqtab_combined[,-1]
hi = collapseNoMismatch(seqtab_combined,minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
collapseNoMismatch(seqtable,minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
collapseNoMismatch(seqtab,minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = FALSE)
collapseNoMismatch(seqtab,minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = TRUE)
class(seqtab)
class(seqtab_combined)
collapseNoMismatch(seqtab_combined, minOverlap = 20,o rderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
seqtab_combined
collapseNoMismatch(seqtab,minOverlap = 20,orderBy = "abundance",identicalOnly = FALSE,vec = TRUE,band = -1,verbose = TRUE)
collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
View(combinedTables)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
seqtab_combined = as.matrix(seqtab_combined)
rownames(seqtab_combined) = seqtab_combined[,1]
seqtab_combined = seqtab_combined[,-1]
collapseNoMismatch(seqtab_combined, minOverlap = 20,o rderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
collapseNoMismatch(combinedTables, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
View(combinedTables)
combinedTables[,1]
rownames(combinedTables2) = combinedTables[,1]
combinedTables2 = combinedTables
rownames(combinedTables2) = combinedTables2[,1]
collapseNoMismatch(combinedTables2, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
collapseNoMismatch(seqtab_combined, minOverlap = 20,o rderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
View(combinedTables2)
combinedTables2$V1 = NULL
collapseNoMismatch(combinedTables2, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
View(seqtab)
View(seqtab_combined)
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.character())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
seqtab_combined = as.matrix(seqtab_combined)
rownames(seqtab_combined) = seqtab_combined[,1]
seqtab_combined = seqtab_combined[,-1]
dim(seqtab_combined)
dim(seqtab)
collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
seqtab_combined[,1]
seqtab[,1]
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.numeric())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
class(combinedTables$abundance)
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
seqtab_combined = as.matrix(seqtab_combined)
rownames(seqtab_combined) = seqtab_combined[,1]
seqtab_combined = seqtab_combined[,-1]
class(seqtab_combined[,1])
seqtab_combined[,1]
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
class(seqtab_combined$ATTGAACGCTGGCGGCAGGCTTAACACATGCAAGTCGGACGGTAGCAGGAGAAAGCTTGCTTTCTTGCTGACGAGTGGCGGACGGGTGAGTAATGCTTGGGAATCTGTCTTATGGAGGGGGATAACGACGGGAAACTGTCGCTAATACCGCGTAGGGTCGGGAGACGAAAGTGCGGGACTTTATGGCCGCATGCCATGAGATGAACCCAAGTGTGATTAGGTAGTTGGTGGGGTAAGGGCCTACCAAGCCGACGATCGCTAGCTGGTCTGAGAGGATGGCCAGCCACACCGGGACTGAGACACGGCCCGGACTCCTACGGGAGGCAGCAGTGGGGAATATTGCGCAATGGGGGCAACCCTGACGCAGCCATGCCGCGTGAATGAAGAAGGCCTTCGGGTTGTAAAGTTCTTTCGGTATTGAGGAAGGTTGGTGTGTTAATAGCATGCCAAATTGACGTTAAATACAGAAGAAGCACCGGCTAACTCCGTGC)
seqtab_combined = as.matrix(seqtab_combined)
class(seqtab_combined[,1])
class(seqtab_combined[,2])
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
seqtab_combined = as.data.frame(seqtab_combined)
class(seqtab_combined$ATTGAACGCTGGCGGCAGGCTTAACACATGCAAGTCGGACGGTAGCAGGAGAAAGCTTGCTTTCTTGCTGACGAGTGGCGGACGGGTGAGTAATGCTTGGGAATCTGTCTTATGGAGGGGGATAACGACGGGAAACTGTCGCTAATACCGCGTAGGGTCGGGAGACGAAAGTGCGGGACTTTATGGCCGCATGCCATGAGATGAACCCAAGTGTGATTAGGTAGTTGGTGGGGTAAGGGCCTACCAAGCCGACGATCGCTAGCTGGTCTGAGAGGATGGCCAGCCACACCGGGACTGAGACACGGCCCGGACTCCTACGGGAGGCAGCAGTGGGGAATATTGCGCAATGGGGGCAACCCTGACGCAGCCATGCCGCGTGAATGAAGAAGGCCTTCGGGTTGTAAAGTTCTTTCGGTATTGAGGAAGGTTGGTGTGTTAATAGCATGCCAAATTGACGTTAAATACAGAAGAAGCACCGGCTAACTCCGTGC)
seqtab_combined[,1]
seqtab_combined[,2]
class(seqtab_combined[,2])
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
seqtab_combined = as.data.frame(seqtab_combined)
row.names(seqtab_combined) = seqtab_combined[,1]
seqtab_combined[,1] = NULL
hi = collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
?as.matrix
seqtab_combined = as.matrix(seqtab_combined)
seqtab_combined[,1]
combinedTables = data.frame(V1=as.character(),
sequence=as.character(),
abundance=as.numeric())
for (x in seqtabs){
currentTable =  read_tsv(x) %>% as.data.frame(.)
currentTable = currentTable %>% pivot_longer(.,cols=2:dim(currentTable)[2], names_to = "sequence",values_to = "abundance") %>% as.data.frame(.)
combinedTables = rbind(combinedTables,currentTable)
}
seqtab_combined = pivot_wider(combinedTables, names_from = "sequence", values_from = "abundance")
seqtab_combined = as.data.frame(seqtab_combined)
row.names(seqtab_combined) = seqtab_combined[,1]
seqtab_combined[,1] = NULL
seqtab_combined = as.matrix(seqtab_combined)
seqtab_combined[,1]
class(seqtab_combined[,1])
collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
condensed_table = collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
?collapseNoMismatch
condensed_table = collapseNoMismatch(seqtab_combined, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
?removeBimeraDenovo
seqtab_noChim =  removeBimeraDenovo(seqtab_combined, method = "pooled", multithread = 5)
cores = 10
seqtab_noChim =  removeBimeraDenovo(seqtab_combined, method = "pooled", multithread =  cores)
condensed_table = collapseNoMismatch(seqtab_noChim, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
inputFolder
newPath = strsplit(inputFolder,"/dada2/")
newPath
newPath = strsplit(inputFolder,"/dada2/") %>% strsplit(.,"/")
newPath = strsplit(inputFolder,"/dada2/") %>% strsplit(.,"//")
?strsplit
newPath = strsplit(inputFolder,"/dada2/") %>% strsplit(.,"/",fixed=TRUE)
newPath = strsplit(inputFolder,"/dada2/")
newPath = strsplit(newPath,"/",fixed=TRUE)
newPath = strsplit(newPath,"//",fixed=TRUE)
newPath = strsplit(newPath,"/",fixed=TRUE)
newPath = strsplit(newPath,,fixed=TRUE)
newPath = strsplit(newPath,"\/",fixed=TRUE)
newPath = strsplit(newPath,"/\",fixed=TRUE)
newPath = strsplit(newPath,"/",fixed=TRUE)
newPath = strsplit(newPath,"//",fixed=TRUE)
newPath = strsplit(newPath,"\/",fixed=TRUE)
newPath
newPath = strsplit(inputFolder,"/dada2/")
newPath
basename(newPath)
basename(as.character(newPath))
region = strsplit(inputFolder,"/dada2/") %>% basename(.) %>% strsplit(.,"-")[2]
strsplit(inputFolder,"/dada2/")
strsplit(inputFolder,"/dada2/") %>% basename(as.character(.))
strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.)
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")[2]
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")
region
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")%>% [[1]][2]
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")%>% .[[1]][2]
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")[[1]] %>% .[2]
strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")[[1]]
strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")
hi = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")[[1]]
hi = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")
hi
hi[[1]]
hi[[1]][2]
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-") %>% .[[1]][2]
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")
region
region[[1]]
region[[1]][2]
region = strsplit(inputFolder,"/dada2/") %>% as.character(.) %>% basename(.) %>% strsplit(.,"-")
region = region[[1]][2]
region
inputFolder
strsplit(inputFolder,"favabean")
strsplit(inputFolder,"favabean")[[1]]
strsplit(inputFolder,"favabean")[[1]][2]
strsplit(inputFolder,"favabean")[[1]][1]
write_tsv(condensed_table,paste0(pathForCondensed_table,"/",region,"_condensed_ASVs.tsv"))
write_tsv(as.data.frame(condensed_table),
paste0(pathForCondensed_table,"/",region,"_condensed_ASVs.tsv"))
pathForCondensed_table = strsplit(inputFolder,"favabean")[[1]][1]
write_tsv(as.data.frame(condensed_table),
paste0(pathForCondensed_table,"/",region,"_condensed_ASVs.tsv"))
paste0(pathForCondensed_table,"/",region,"_condensed_ASVs.tsv"))
paste0(pathForCondensed_table,"/",region,"_condensed_ASVs.tsv")
paste0(pathForCondensed_table,"/favabean/",region,"_condensed_ASVs.tsv"))
paste0(pathForCondensed_table,"/favabean/",region,"_condensed_ASVs.tsv")
write_tsv(as.data.frame(condensed_table),
paste0(pathForCondensed_table,"/favabean/",region,"_condensed_ASVs.tsv"))
View(condensed_table)
fileNames = rownames(condensed_table)
fileNames
condensed_table = as.data.frame(.)
condensed_table = as.data.frame(condensed_table)
SampleIDs = rownames(condensed_table)
condensed_table = cbind(SampleIDs,condensed_table)
write_tsv(condensed_table,
paste0(pathForCondensed_table,"/favabean/",region,"_condensed_ASVs.tsv"))
load("~/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R1.RData")
dadaFs = dadaDenoised
filtFs = theFiles
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors)
load("~/Desktop/v13_V45/favabean/run2-V13/dada2/DADA2Denoise-R2.RData")
dadaRs = dadaDenoised
filtRs = theFiles
rm(theFiles, R1denoised, dadaDenoised, theFiles, DADA2errors)
mergers = mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
inputFolder
basename(inputFolder)
?basename
dirname(inputFolder)
paste0(dirname(inputFolder),"/seqtab.tsv")
inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/filtered"
R1
inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/"
inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/"
rDirection = "R1"
theFiles = sort(list.files(inputFolder, pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE))
?list.files
theFiles = sort(list.files(inputFolder, pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE, recursive = TRUE))
theFiles
theFiles = sort(list.files(paste0(inputFolder,"filtered"), pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE, recursive = TRUE))
theFiles
suppressMessages(library("dada2"))
inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/"
rDirection = "R1"
theFiles = sort(list.files(paste0(inputFolder,"filtered"), pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE, recursive = TRUE))
DADA2errors = learnErrors(opt,theFiles, randomize=TRUE)
?learnErrors()
suppressMessages(library("dada2"))
inputFolder = "/Users/khaled/Desktop/v13_V45/favabean/run2-V13/dada2/"
rDirection = "R1"
theFiles = sort(list.files(paste0(inputFolder,"filtered"), pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE, recursive = TRUE))
DADA2errors = learnErrors(theFiles, randomize=TRUE)
library("dada2")
?learnerrors
?learnErrors
library("dada2")
library("dada2")
inputFolder = "~/Desktop/v13_V45/favabean/run1-V13/dada2/filtered/"
rDirection = "R1"
cores = 8
theFiles = sort(list.files(paste0(inputFolder,"/filtered"), pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE, recursive = TRUE))
theFiles
inputFolder
inputFolder = "~/Desktop/v13_V45/favabean/run1-V13/dada2/"
theFiles = sort(list.files(paste0(inputFolder,"/filtered"), pattern=paste0(rDirection,".*fastq.*"), full.names = TRUE, recursive = TRUE))
theFiles
print("DADA2 Filtered and trimmed fastq files found")
print(theFiles)
print(paste("Will now run DADA2 Error learning. Number of cores to be utilized:",cores))
DADA2errors = learnErrors(theFiles, randomize=TRUE, multithread = cores)
DADA2errors = learnErrors(theFiles, randomize=TRUE, multithread = cores, verbose = TRUE)
library("dada2")
?dada
?mergePairs
?mergePairs
library("dada2")
?mergePairs
?makeSequenceTable
?removeBimeraDenovo
?collapseNoMismatch
?assignTaxonomy
suppressMessages(library("optparse"))
suppressMessages(library("magrittr"))
suppressMessages(library("dada2"))
opt = NULL
opt$input = "/Users/khaled/Desktop/v13_V45/favabean/run1-V13/dada2_DADA2Errors-R1.RData"
cores = 5
rDirection = "R1"
load(opt$input)
dadaDenoised = dada(theFiles, err=DADA2errors, multithread=cores, pool=TRUE, verbose=TRUE)
theFiles
theFiles = list.files("~/Desktop/v13_V45/favabean/run1-V13/dada2/filtered/")
dadaDenoised = dada(theFiles, err=DADA2errors, multithread=cores, pool=TRUE, verbose=TRUE)
theFiles
theFiles = list.files("~/Desktop/v13_V45/favabean/run1-V13/dada2/filtered/",full.names = TRUE)
theFiles
dadaDenoised = dada(theFiles, err=DADA2errors, multithread=cores, pool=TRUE, verbose=TRUE)
?dada
?learnErrors
