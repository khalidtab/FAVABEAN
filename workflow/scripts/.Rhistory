suppressMessages(library("readr"))
suppressMessages(library("tidyr"))
suppressMessages(library("magrittr"))
suppressMessages(library("dada2"))
install.packages("dada2")
install.packages("BiocManager")
BiocManager::install("dada2")
suppressMessages(library("readr"))
suppressMessages(library("tidyr"))
suppressMessages(library("magrittr"))
suppressMessages(library("dada2"))
suppressMessages(library("readr"))
suppressMessages(library("tidyr"))
suppressMessages(library("magrittr"))
suppressMessages(library("dada2"))
suppressMessages(library("readr"))
suppressMessages(library("tidyr"))
suppressMessages(library("magrittr"))
suppressMessages(library("dada2"))
inputfile = "/Users/khaled/Desktop/test"
cores = 20
cores = 2
myparameter = "V3V5"
inputfiles = list.files(inputfile,pattern = "seqtab", full.names = TRUE, recursive = TRUE)
inputfiles2 = inputfiles %>% grepl(myparameter,x=.) %>% inputfiles[.]
process_file <- function(path) {
newTable = data.table::fread(path) %>% as.data.frame() # This is a faster way to read the files than read_tsv()
rownames(newTable) <- newTable[, 1]
newTable[, 1] <- NULL
newTable = as.matrix(newTable)
return(newTable)
}
inputfiles2 = base::sapply(inputfiles2, process_file,simplify=TRUE)
print("Merging sequence tables…")
inputfiles2 = inputfiles2 %>% mergeSequenceTables(tables=.,tryRC = TRUE)
print("Done with merging sequence tables. Table format modification to accomodate chimera removal starts now…")
?removeBimeraDenovo
View(inputfiles2)
seqtab_noChim =  removeBimeraDenovo(inputfiles2, multithread =  TRUE, verbose=TRUE, method = "consensus")
print("Chimeras removed")
inputfile4 = inputfiles2 %>% .[,colnames(.) %in% seqtab_noChim$sequence]
View(seqtab_noChim)
save(seqtab_noChim, file = paste0("~/Desktop/test/",myparameter,"_chimeraRemoved.RObjects"), envir = .GlobalEnv)
suppressMessages(library("readr"))
suppressMessages(library("tidyr"))
suppressMessages(library("magrittr"))
suppressMessages(library("dada2"))
inputFile = "~/Desktop/test/V3V5_chimeraRemoved.RObjects"
cores = 2
load(inputFile)
load(inputFile)
load(inputFile)
seqtab_noChim = as.data.frame(seqtab_noChim)
View(seqtab_noChim)
mapping = read.csv("~/Desktop/test/files_info_Batches.csv")
View(mapping)
mapping$theFiles = paste0(mapping$sample,"_S",mapping$SampleNum,"_L001_filt_S1_L001_R1_001.fastq.gz")
mapping2 = mapping %>% select(theFiles,alias)
mapping2 = data.frame(thefiles = mapping$theFiles, alias = mapping$alias)
View(mapping2)
colnames(seqtab_noChim)
?left_join
seqtab_noChim2 = dplyr::left_join(seqtab_noChim,mapping2,by = join_by(rownames(seqtab_noChim) == thefiles))
?dplyr
?left_join
suppressMessages(library("dplyr"))
seqtab_noChim2 = dplyr::left_join(seqtab_noChim,mapping2,by = join_by(rownames(seqtab_noChim) == thefiles))
seqtab_noChim2 = cbind(rownames(seqtab_noChim),seqtab_noChim)
View(seqtab_noChim2)
seqtab_noChim2 = cbind(rownames(seqtab_noChim),seqtab_noChim)
colnames(seqtab_noChim2)[1]
colnames(seqtab_noChim2)[1] = "thefiles"
seqtab_noChim3 = dplyr::left_join(seqtab_noChim2,mapping2)
View(seqtab_noChim3)
seqtab_noChim3$thefiles = NULL
colnames(mapping2)
seqtab_noChim3$alias
?group_by
seqtab_noChim3 = seqtab_noChim3 %>% group_by(seqtab_noChim3) %>% summarize(across(everything(), sum))
seqtab_noChim3 = seqtab_noChim3 %>% group_by(alias) %>% summarize(across(everything(), sum))
condensed_table = collapseNoMismatch(seqtab_noChim3, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
seqtab_noChim2 = cbind(rownames(seqtab_noChim),seqtab_noChim)
colnames(seqtab_noChim2)[1] = "thefiles"
seqtab_noChim3 = dplyr::left_join(seqtab_noChim2,mapping2)
seqtab_noChim3$thefiles = NULL
print("Samples sequenced multiple times (if any) will now be merged…")
seqtab_noChim3 = seqtab_noChim3 %>% group_by(alias) %>% summarize(across(everything(), sum)) %>% as.data.frame(.)
condensed_table = collapseNoMismatch(seqtab_noChim3, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
condensed_table = collapseNoMismatch(as.matrix(seqtab_noChim3), minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
?collapseNoMismatch
rownames(seqtab_noChim3) = seqtab_noChim3$alias
seqtab_noChim3$alias = NULL
condensed_table = collapseNoMismatch(seqtab_noChim3, minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
condensed_table = collapseNoMismatch(as.matrix(seqtab_noChim3), minOverlap = 20, orderBy = "abundance", identicalOnly = FALSE, vec = TRUE, band = -1, verbose = TRUE)
View(seqtab_noChim3)
SampleIDs = rownames(condensed_table)
condensed_table = as.data.frame(condensed_table)
condensed_table = cbind(SampleIDs,condensed_table)
condensed_table = t(condensed_table) %>% as.data.frame(.)
condensed_table = cbind(rownames(condensed_table),condensed_table)
write_tsv(condensed_table,"~/Desktop/test/V3V5_condense.tsv",col_names = FALSE)
